name: CD/CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [ opened, synchronize, reopened ]

jobs:
  check:
    name: Check üî¨
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Run gradle check
        run: ./gradlew check --stacktrace --no-configuration-cache

  security-scan:
    name: Security Scan üîé
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Lava
        uses: adevinta/lava-action@v0
        with:
          comment-pr: "true"

  typo-checker:
    name: Check typos in project üìö
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check typos
        uses: crate-ci/typos@master

  automerge:
    name: Auto-merge dependabot PRs
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }}
    needs: [ check, security-scan ]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3
        with:
          merge-method: 'rebase'

  build:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Docker üêã
    runs-on: ubuntu-latest
    needs:
      - check
      - typo-checker
      - security-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build --exclude-task check

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Dashboard to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub üêã
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: baaarbz/sports-elo:latest

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Deploy üöÄ
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy the application üöÄ
        uses: appleboy/ssh-action@v1.2.2
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          AUTH_USERNAME: ${{ secrets.AUTH_USERNAME }}
          AUTH_PASSWORD: ${{ secrets.AUTH_PASSWORD }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          envs: POSTGRES_URL,POSTGRES_PASSWORD,POSTGRES_USER,AUTH_USERNAME,AUTH_PASSWORD
          script: |
            export POSTGRES_URL=$POSTGRES_URL
            export POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            export POSTGRES_USER=$POSTGRES_USER
            export AUTH_USERNAME=$AUTH_USERNAME
            export AUTH_PASSWORD=$AUTH_PASSWORD
            git clone https://baaarbz:${{ secrets.GITHUB_TOKEN }}@github.com/Baaarbz/sports-elo.git
            sh sports-elo/deploy/deploy.sh
            rm -rf sports-elo